.
├── activations
│   ├── relu.py
│   ├── sigmoid_orig.py
│   ├── sigmoid.py
│   └── softplus.py
├── classifiers
│   ├── biases.json
│   ├── four-digit-classifier-one-layer.py
│   ├── four-digit-classifier.py
│   ├── sixteen-digit-classifier-one-layer.py
│   ├── sixteen-digit-classifier-reader.py
│   └── weights.json
├── gates
│   ├── notes.txt
│   ├── snn_and.py
│   ├── snn_hard_coded_weights_and.py
│   ├── snn_invert.py
│   ├── snn_nand.py
│   ├── snn_nor.py
│   ├── snn_or.py
│   ├── snn_xor_linear.py
│   ├── snn_xor.py
│   └── xor_single_layer_with_multiply_feature.py
├── layered-n-n
│   ├── lnn.py
│   └── lnn.py~
├── lin-reg-basic
│   ├── cbpro_crypto_price_volume_file.csv
│   ├── kc_house_data.csv
│   ├── lr2.py
│   ├── lr_non_lin.py
│   ├── lr_optimize.py
│   ├── lr.py
│   ├── multivariate_lr_csv_in_cryptos.py
│   ├── multivariate_lr_csv_in.py
│   ├── multivariate_lr_intro.py
│   ├── multivariate_lr.py
│   ├── notes.txt
│   ├── pandas-read-csv-to-array.example-cryptosy.py
│   └── pandas-read-csv-to-array.example.py
├── notes.txt
├── numpy-warmup-predict-y-from-x
│   ├── gets-close-on-2-dim.txt
│   ├── load-arry-predict-x-from-y.py
│   ├── nails-it-dim-2.txt
│   ├── nails-it-quick.txt
│   ├── notes.txt
│   ├── predict-y-from-x.2.py
│   ├── predict-y-from-x.orig.py
│   ├── predict-y-from-x.preloaded-x.py
│   ├── predict-y-from-x.py
│   ├── predict-y-from-x.py~
│   ├── predict-y-from-x-squareroot-bias.py
│   ├── predict-y-from-x-squareroot.py
│   ├── test.py
│   └── test.txt
├── perceptrons
│   ├── and.py
│   ├── nand.py
│   ├── nor.py
│   ├── notes.txt
│   ├── not.py
│   ├── or.py
│   ├── or_sigmoid.py
│   ├── xnor.py
│   ├── xor-from-nand.py
│   ├── xor-linear.py
│   └── xor.py
├── solvers
│   ├── brute_force_solver.py
│   ├── diffevol.py
│   ├── diff_evol_solver-1.py
│   ├── diff_evol_solver-2.py
│   ├── diff_evol_solver-mx+b.py
│   ├── diff_evol_solver.py
│   ├── diff_evol_solver-x2+b.py
│   ├── linear_proportional_solver.py
│   ├── linear_proportional_solver_w_nonlin.py
│   ├── newtons_method_square_root_solver.py
│   ├── predict_the_root_linear_solver_mod.py
│   ├── split-search
│   │   ├── split-search.py
│   │   ├── split-search-seek-a-specific-value.py
│   │   ├── split-search-seek-max.py
│   │   └── split-search-seek-min.py
│   └── step_ahead_jump_back_solver.py
├── tree.txt
├── Vectors_Linear_Algebra
│   ├── algebra_vs_linearalgebra.py
│   ├── algebra_vs_linearalgebra.py.orig
│   ├── dec_to_bin.py
│   ├── dec_to_bin-test-4.py
│   ├── notes.txt
│   ├── num_to_bin.py
│   ├── README.md
│   ├── reshape.py
│   ├── simple_neural_network.py
│   ├── simple_neural_network.py.orig
│   ├── source.txt
│   └── sqrt.py
└── xor
    ├── notes.txt
    ├── single_layer_xor_fails.py
    ├── xor_nn_bias_as_feature.py
    ├── xor_nn_linear_both_layers.py
    ├── xor_nn_linear_output_layer.py
    ├── xor_nn_no_bias.py
    ├── xor_nn.py
    ├── xor_nn.py.orig
    ├── xor_nn_single_layer.py
    └── xor_nn_single_layer_with_built_in_feature_eng.py

11 directories, 100 files
