erick@media-pc ~/ml/numpy-warmup-predict-y-from-x $ python predict-y-from-x.2.py 
X and Y numpy arrays
(array([[  0,   1,   4,   9,  16,  25,  36,  49,  64,  81],
       [  1,   4,   9,  16,  25,  36,  49,  64,  81, 100]]), array([[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],
       [ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10]]))
--------------
(0, 7345116.5074463962)
(10000, 494.42995355931487)
(20000, 41.191956538208466)
(30000, 1.9251468785953221)
(40000, 1.245181107595408)

Results X
[[  0   1   4   9  16  25  36  49  64  81]
 [  1   4   9  16  25  36  49  64  81 100]]
Y  ---------------
[[ 0  1  2  3  4  5  6  7  8  9]
 [ 1  2  3  4  5  6  7  8  9 10]]
Predicated Y ----------------
[[  0.49802645   1.41881586   2.33116133   3.25297709   4.17434701
    5.09104304   6.00833788   6.93465997   7.84970283   8.76633245]
 [  0.57919269   1.65004845   2.71108412   3.7831335    4.85466437
    5.92075964   6.98755131   8.06484144   9.1290141   10.19503212]]
-----------------------
Load x with new array and make a prediction with model weights set
(array([[  1,   4,   9,  16,  25,  36,  49,  64,  81, 100]]), array([[  0.57919181,   1.65004725,   2.7110846 ,   3.78313341,
          4.85466382,   5.92075973,   6.9875519 ,   8.06484039,
          9.12901409,  10.19503278]]))

